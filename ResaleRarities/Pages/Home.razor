<!-- Index.razor -->
@page "/"
@using ApplicationCore.Models
@using ApplicationCore.Interfaces
@using Microsoft.AspNetCore.Components
@using Infrastructure.Utility
@inject IJSRuntime JsRuntime

<PageTitle>Index</PageTitle>

<div class="container">
    <!-- Listing Cards Section -->
    <h1 class="text-center"> Current Listings</h1>
    <div class="row">
        @foreach (var product in ProductListings)
        {
            @if (product != null)
            {
                <div class="col-md-4 col-12 d-flex align-items-stretch ">
                    <div class="listing-card w-100" @onclick="()=> ViewProduct(product.Id)">
                        @{
                            var frontImage = _unitofWork.Image.Get(image => image.ProductId == product.Id);
                            if (frontImage != null)
                            {
                                <div class="justify-content-center d-flex">
                                    <img src="@($"data:image;base64,{Convert.ToBase64String(frontImage.ImageData)}")" alt="Product Picture" class="listing-card-image" style="width: 200px; height: 200px;" />
                                </div>
                            }
                            else
                            {
                                <img src="https://via.placeholder.com/150" alt="Placeholder Image" class="listing-card-image" />
                            }
                        }
                        <div class="text-center">@product.Name</div>
                       
                        <p>Condition: @(product.Condition?.Type ?? "Not Listed")</p>
                        <p>Category: @(product.Category?.Name ?? "Not Listed")</p>
                        
                    </div>
                </div>
            }



        }
    </div>
  
   
</div>
@code
{
    IEnumerable<Product> ProductListings = new List<Product>();
    [Inject]
    private IUnitofWork? _unitofWork { get; set; }

    protected override void OnInitialized()
    {
        ProductListings = _unitofWork!.Product.List(pl => pl.Listing.ListingStatus.StatusDescription != SD.LSDraft, includes: "Listing.ListingStatus");
    }
    private void ViewProduct(string Id)
    {
        
    }
}